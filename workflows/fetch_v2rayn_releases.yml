name: Fetch v2rayN Releases

on:
  schedule:
    - cron: '0 0 * * *'  # 每天 00:00 UTC 执行一次
  workflow_dispatch:  # 手动触发

jobs:
  fetch-latest-releases:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Get Latest 5 v2rayN Releases
        id: get_releases
        uses: actions/github-script@v6
        with:
          script: |
            const releases = await github.rest.repos.listReleases({
              owner: '2dust',
              repo: 'v2rayN',
              per_page: 5  // 获取最近5次的release
            });
            return releases.data.map(release => ({
              tag_name: release.tag_name,
              download_url: release.assets.length > 0 ? release.assets[0].browser_download_url : null
            }));

      - name: Log Release Data
        run: |
          echo '${{ steps.get_releases.outputs.result }}'

      - name: Download and Save Releases
        run: |
          mkdir -p releases
          for release in $(echo '${{ steps.get_releases.outputs.result }}' | jq -c '.[]'); do
            tag_name=$(echo "$release" | jq -r '.tag_name')
            download_url=$(echo "$release" | jq -r '.download_url')

            # 检查是否存在该版本文件夹
            if [ -d "releases/$tag_name" ]; then
              echo "Release $tag_name already exists, skipping download."
              continue
            fi

            # 下载 release 文件到对应版本文件夹
            if [ "$download_url" != "null" ]; then
              mkdir -p releases/"$tag_name"
              wget -O releases/"$tag_name"/v2rayN.zip "$download_url"
              echo "Downloaded release $tag_name."
            else
              echo "No download URL for release $tag_name, skipping."
            fi
          done

      - name: Check for Changes and Commit
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          # 检查是否有更改
          if git diff-index --quiet HEAD --; then
            echo "No changes detected, skipping commit."
            exit 0
          fi
          
          git add releases
          git commit -m "Update v2rayN releases"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
